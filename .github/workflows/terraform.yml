name: 'Terraform Azure Deployment'

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Azure Login via JSON credentials
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        auth-type: 'service_principal'
        environment: 'azurecloud'

    - name: Export Azure credentials to environment for Terraform
      run: |
        echo "ARM_CLIENT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}" >> $GITHUB_ENV

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -out=tfplan

    - name: Export Plan JSON
      run: |
        if [ -f tfplan ]; then
          terraform show -json tfplan > plan.json
        else
          echo "{}" > plan.json
        fi

    - name: Generate Plan Summary File
      run: |
        echo "Resources to be CREATED:" > plan_summary.txt
        jq -r '.resource_changes[]? | select(.change.actions[0] == "create") | .address' plan.json >> plan_summary.txt || echo "None" >> plan_summary.txt

        echo -e "\nResources to be UPDATED:" >> plan_summary.txt
        jq -r '.resource_changes[]? | select(.change.actions[0] == "update") | .address' plan.json >> plan_summary.txt || echo "None" >> plan_summary.txt

        echo -e "\nResources to be DELETED:" >> plan_summary.txt
        jq -r '.resource_changes[]? | select(.change.actions[0] == "delete") | .address' plan.json >> plan_summary.txt || echo "None" >> plan_summary.txt

    - name: Upload Plan Summary Artifact
      uses: actions/upload-artifact@v3
      with:
        name: terraform-plan-summary
        path: plan_summary.txt

    # OPTIONAL: Automatically apply only if plan file exists
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        if [ -f tfplan ]; then
          terraform apply -auto-approve tfplan
        else
          echo "No plan file found. Skipping apply step."
        fi

